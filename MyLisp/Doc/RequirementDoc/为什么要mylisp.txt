
传统的Lisp没有栈功能，所以事先函数的时候符号不能隔离，需要将符号随机化生成一个名字，这样调试不容易，设计也不容易，通常设计宏时出现原子命名生命期混淆，CommonLisp试图隐蔽这个概念却难做到，反而因此造成了很不易理解与应用的坑。

传统的Lisp一般只支持列表求值，mylisp不但支持列表求值，还支持原子求值，这是什么意思呢，意思就是以前的函数必须是 (+ 1 2),现在你若是做了原子函数就能 (1 + 2)


原子求值的重要意义还有将 函数 lambda 还有宏都泛型到列表对象，函数也是列表了((setq `a (list 1 2 3)) a),你可以人为a抽象上就是一个lambda内联函数或者宏
